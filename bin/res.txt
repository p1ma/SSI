%% Constraint Logic-based ATtack SEarcher (CL-ATSE) Version 2.5-18 (2012-septembre-26).

----------------
  AtSe Summary  
----------------

  Protocol file: ../lmDSsk.if
  Attack found : NOT ANALYSED

  Analysed   : 0 state
  Reachable  : 0 state
  Translation: 0.02 seconds
  Computation: 0.00 seconds


---------------------------------------------
            Internal System State            
  (initial state after reading the if file)  
---------------------------------------------

Intruder state :
----------------

Last trace element :  none
Intruder Knowledge :  start i s b a 


General structure of the specification (incomplete) :
-----------------------------------------------------

Role serveur played by (s,13):
 step_5, 


Role bob played by (s,12):
 step_3, 
 step_4, 


Role serveur played by (s,9):
 step_5, 


Role bob played by (s,8):
 step_3, 
 step_4, 


Role alice played by (a,7):
 step_0, 
 step_1, 
 step_2, 


Role serveur played by (s,5):
 step_5, 


Role bob played by (s,4):
 step_3, 
 step_4, 


Role alice played by (a,3):
 step_0, 
 step_1, 
 step_2, 



Interpreted specification (complete) :
------------------------------------

Role serveur played by (s,13):
| i.b => {b.n29(Kab).n29(T).{n29(Kab).i.n29(T)}_dummy_sk}_dummy_sk
|    & Secret(n29(Kab),(),set_95);   Add i to set_95;  Add b to set_95;
|    & Add s to set_95;
|    & Built from step_5

Role bob played by (s,12):
| {Kab(25).A(25).T(25)}_dummy_sk => {n25(Nb)}_dummy_sk
|    & Built from step_3
| {{n25(Nb)}_pred}_Kab(25) => ()
|    & Built from step_4

Role serveur played by (s,9):
| a.i => {i.n23(Kab).n23(T).{n23(Kab).a.n23(T)}_dummy_sk}_dummy_sk
|    & Secret(n23(Kab),(),set_91);   Add a to set_91;  Add i to set_91;
|    & Add s to set_91;
|    & Built from step_5

Role bob played by (s,8):
| {Kab(19).A(19).T(19)}_dummy_sk => {n19(Nb)}_dummy_sk
|    & Built from step_3
| {{n19(Nb)}_pred}_Kab(19) => ()
|    & Built from step_4

Role alice played by (a,7):
| start => set_88
|    & Add a.i to set_88;
|    & Built from step_0
| {i.dummy_sk.dummy_nat.{dummy_sk.a.T(14)}_dummy_sk}_dummy_sk
|   => {dummy_sk.a.T(14)}_dummy_sk
|    & Built from step_1
| {dummy_nat}_dummy_sk => {{dummy_nat}_pred}_dummy_sk
|    & Built from step_2

Role serveur played by (s,5):
| a.b => {b.n11(Kab).n11(T).{n11(Kab).a.n11(T)}_dummy_sk}_dummy_sk
|    & Secret(n11(Kab),(),set_84);   Add a to set_84;  Add b to set_84;
|    & Add s to set_84;
|    & Built from step_5

Role bob played by (s,4):
| {Kab(7).A(7).T(7)}_dummy_sk => {n7(Nb)}_dummy_sk
|    & Built from step_3
| {{n7(Nb)}_pred}_Kab(7) => ()
|    & Built from step_4

Role alice played by (a,3):
| start => set_71
|    & Add a.b to set_71;
|    & Built from step_0
| {b.dummy_sk.dummy_nat.{dummy_sk.a.T(2)}_dummy_sk}_dummy_sk
|   => {dummy_sk.a.T(2)}_dummy_sk
|    & Built from step_1
| {dummy_nat}_dummy_sk => {{dummy_nat}_pred}_dummy_sk
|    & Built from step_2


Interpreted goal list :
-----------------------

none except standard goals


List of universally quantified variables :
------------------------------------------

none


---------------------------------------------
                Oracle Rules                 
---------------------------------------------

Some Remarks :
--------------

- The syntax of protocol steps is
   "Received Msg" => "Sent Msg"  [Equalities] & Inequalities & IF facts
- A Role is a tree where steps are unary nodes and choice points are n-ary nodes
- The Initial System state is the state of cl-atse at the begining of the search
  for attacks, and represents both the intruder and honest participants state.
- See the cl-atse's subsection in the user-manual for more details.

