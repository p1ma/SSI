Yo,

En regardant un peu sur internet les différents protocoles qui existent, un protocole d'échange de clé effectue la même chose que notre protocole (sans attaque possible apparemment).
Le protocole s'est: Lowe modified Denning-Sacco shared key

http://www.lsv.fr/Software/spore/denningSaccoLowe.html

A, B, S :  	principal
Nb :  	nonce
Kas, Kbs, Kab :  	key
T :  	timestamp
dec :  	nonce -> nonce

1.  	A	->	S	:  	A, B
2.  	S	->	A	:  	{B, Kab, T, {Kab, A, T}Kbs}Kas
3.  	A	->	B	:  	{Kab,A, T}Kbs
4.  	B	->	A	:  	{Nb}Kab
5.  	A	->	B	:  	{dec(Nb)}Kab

Il faudrait ensuite adapter notre partie: commandes au radar, mais ca reste assez simple.

EDIT (03/01/2018):

Pour éviter une potentielle attaque, il faudrait définir le serveur (S) en tant que role d'environnement (et pas de session). Vu que son role ne dépend pas des sessions, il tourne tout le temps et attend que quelqu'un lui envoie une requete.
Ensuite, il faudrait lui ajouter une 'Map' contenant les agents autorisés à communiquer avec leurs clés publiques respectives.
Comme ca si genre un intruder veut initier le dialogue, le serveur verifie que l'initiateur du dialogue est present dans la 'Map' des personnes authorisées, si oui on continue sinon on finie l'échange.

En plus ca montre qu'on genre les ensembles, on PEZ DANS LE GAME

